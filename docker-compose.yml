version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"  # HTTP
      - "9000:9000"  # Native
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./setup_tables.sql:/docker-entrypoint-initdb.d/setup_tables.sql
    environment:
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: secret
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  hft_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hft_app
    volumes:
      - .:/app
    depends_on:
      clickhouse:
        condition: service_healthy
    entrypoint: []
    command: ["/bin/bash", "entrypoint.sh"]
    environment:
      - PYTHONUNBUFFERED=1
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASS=secret
      - DRY_RUN=0
      - KAFKA_ENABLED=0
      - LIQUIDATION_ENABLED=0
      - BINANCE_API_KEY=${BINANCE_API_KEY}
      - BINANCE_API_SECRET=${BINANCE_API_SECRET}
    restart: unless-stopped

  streamlit_ui:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: streamlit_ui
    ports:
      - "8501:8501"
    volumes:
      - .:/app
    entrypoint: []
    command: ["streamlit", "run", "ui_dashboard_fixed.py", "--server.port=8501", "--server.address=0.0.0.0"]
    depends_on:
      clickhouse:
        condition: service_healthy
    environment:
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASS=secret
      - DRY_RUN=1
      - DASHBOARD_USERNAME=${DASHBOARD_USERNAME:-admin}
      - DASHBOARD_PASSWORD=${DASHBOARD_PASSWORD:-trading123}
    restart: unless-stopped

volumes:
  clickhouse_data: